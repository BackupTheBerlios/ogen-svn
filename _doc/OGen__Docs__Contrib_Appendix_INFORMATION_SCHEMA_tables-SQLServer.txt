/*

OGen
Copyright (C) 2002 Francisco Monteiro

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

SELECT
--	_field.TABLE_CATALOG, 
--	_field.TABLE_NAME, 


	_field.COLUMN_NAME AS Name, 

	CASE
		WHEN _field.IS_NULLABLE = 'No' THEN
			CAST(0 AS Int)
		ELSE
			CAST(1 AS Int)
	END
	AS isNullable, 

	_field.DATA_TYPE
	AS Type, 

	_field.CHARACTER_MAXIMUM_LENGTH
	AS Size, 

	CASE
		WHEN (_table.TABLE_TYPE = 'VIEW') THEN
			CAST(0 AS Int)
		WHEN (PK.PK_COLUMN_NAME = _field.COLUMN_NAME) THEN
			CAST(1 AS Int)
		ELSE
			CAST(0 AS Int)
	END 
	AS isPK, 

	CASE
		WHEN (_table.TABLE_TYPE != 'VIEW') THEN
			CAST(COLUMNPROPERTY(OBJECT_ID(_field.TABLE_NAME), _field.COLUMN_NAME, 'IsIdentity') AS Int)
		ELSE
			CASE
				WHEN (
					(SUBSTRING(_field.COLUMN_NAME, 3, 1) = ',') AND 
					(SUBSTRING(_field.COLUMN_NAME, 1, 1) = 'I')
				) THEN
					CAST(1 AS Int)
				ELSE
					CAST(0 AS Int)
			END
			--COLUMNPROPERTY(OBJECT_ID(t5.TABLE_NAME), t5.COLUMN_NAME, 'IsIdentity')
	END 
	AS isIdentity, 

	FK.PK_TABLE_NAME AS FK_TableName, 

	FK.PK_COLUMN_NAME AS FK_FieldName, 

	_field.COLUMN_DEFAULT, 

	_field.COLLATION_NAME, 

	_field.NUMERIC_PRECISION, 

	_field.NUMERIC_SCALE

FROM INFORMATION_SCHEMA.COLUMNS AS _field

	LEFT JOIN INFORMATION_SCHEMA.TABLES _table ON
		(_table.TABLE_CATALOG = _field.TABLE_CATALOG)
		and
		(_table.TABLE_SCHEMA = _field.TABLE_SCHEMA)
		and
		(_table.TABLE_NAME = _field.TABLE_NAME)

	left join (
		select
			PK_TABLE_NAME = _pks.TABLE_NAME, 
			PK_COLUMN_NAME = _pks.COLUMN_NAME, 
			PK_CONSTRAINT_CATALOG = _tc.CONSTRAINT_CATALOG, 
			PK_CONSTRAINT_SCHEMA = _tc.CONSTRAINT_SCHEMA
		from INFORMATION_SCHEMA.TABLE_CONSTRAINTS _tc
		inner join INFORMATION_SCHEMA.KEY_COLUMN_USAGE _pks on
			(_pks.CONSTRAINT_CATALOG = _tc.CONSTRAINT_CATALOG)
			and
			(_pks.CONSTRAINT_SCHEMA = _tc.CONSTRAINT_SCHEMA)
			and
			(_pks.CONSTRAINT_NAME = _tc.CONSTRAINT_NAME)
			and 
			(_tc.CONSTRAINT_TYPE = 'PRIMARY KEY')
	) PK on
		(PK.PK_CONSTRAINT_CATALOG = _field.TABLE_CATALOG)
		and
		(PK.PK_CONSTRAINT_SCHEMA = _field.TABLE_SCHEMA)
		and
		PK.PK_TABLE_NAME = _field.TABLE_NAME
		and
		PK.PK_COLUMN_NAME = _field.COLUMN_NAME

	left join (
		select
			FK_TABLE_NAME = _fks.TABLE_NAME, 
			FK_COLUMN_NAME = _fks.COLUMN_NAME, 
			PK_TABLE_NAME = _pk.TABLE_NAME, 
			PK_COLUMN_NAME = _pk.COLUMN_NAME, 
			FK_CONSTRAINT_CATALOG = _rc.CONSTRAINT_CATALOG, 
			FK_CONSTRAINT_SCHEMA = _rc.CONSTRAINT_SCHEMA
		from INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS _rc
		inner join INFORMATION_SCHEMA.KEY_COLUMN_USAGE _fks on 
			(_fks.CONSTRAINT_CATALOG = _rc.CONSTRAINT_CATALOG)
			and
			(_fks.CONSTRAINT_SCHEMA = _rc.CONSTRAINT_SCHEMA)
			and
			(_fks.CONSTRAINT_NAME = _rc.CONSTRAINT_NAME)
		inner join INFORMATION_SCHEMA.KEY_COLUMN_USAGE _pk on
			(_pk.CONSTRAINT_CATALOG = _rc.CONSTRAINT_CATALOG)
			and
			(_pk.CONSTRAINT_SCHEMA = _rc.CONSTRAINT_SCHEMA)
			and
			(_pk.CONSTRAINT_NAME = _rc.UNIQUE_CONSTRAINT_NAME)

	) FK on 
		(FK.FK_CONSTRAINT_CATALOG = _field.TABLE_CATALOG)
		and
		(FK.FK_CONSTRAINT_SCHEMA = _field.TABLE_SCHEMA)
		and
		(FK.FK_TABLE_NAME = _field.TABLE_NAME)
		and
		(FK.FK_COLUMN_NAME = _field.COLUMN_NAME)

WHERE
--	(_field.TABLE_CATALOG = '{0}')
--	AND
--	(_field.TABLE_NAME = '{1}') 
--	AND
	(_field.TABLE_NAME = 'UserGroup') OR (_field.TABLE_NAME = 'User') OR (_field.TABLE_NAME = 'Group')

ORDER BY 
	_field.TABLE_NAME, 
	_field.ORDINAL_POSITION
