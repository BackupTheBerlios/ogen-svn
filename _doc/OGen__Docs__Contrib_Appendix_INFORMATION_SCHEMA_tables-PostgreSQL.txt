/*

OGen
Copyright (C) 2002 Francisco Monteiro

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

SELECT
	t1.TABLE_CATALOG, 
	t1.TABLE_NAME, 

	t1.COLUMN_NAME AS "Name", 

	CASE
		WHEN t1.IS_NULLABLE = 'NO' THEN
			CAST(0 AS Int)
		ELSE
			CAST(1 AS Int)
	END 
	AS "isNullable", 

	t1.DATA_TYPE AS "Type", 
--	t1.udt_name AS "Type_short", 

	t1.CHARACTER_MAXIMUM_LENGTH AS "Size", 

	CASE
		WHEN (t6.TABLE_TYPE = 'VIEW') THEN
			CAST(0 AS Int)
		WHEN (t1.column_name = pk.column_name) THEN
			CAST(1 AS Int)
		ELSE
			CAST(0 AS Int)
	END
	AS "isPK", 

	CASE
		WHEN (t6.TABLE_TYPE = 'VIEW') THEN
			CAST(0 AS Int)
		ELSE
			CASE
				WHEN (t1.COLUMN_DEFAULT LIKE 'nextval(''%') THEN
					CAST(1 AS Int)
				ELSE
					CAST(0 AS Int)
			END
	END 
	AS "isIdentity", 

	fk.foreigntable_name AS "FK_TableName", 

	fk.foreigncolumn_name AS "FK_FieldName", 

	t1.COLUMN_DEFAULT AS "COLUMN_DEFAULT", 

	t1.COLLATION_NAME AS "COLLATION_NAME", 

	t1.NUMERIC_PRECISION AS "NUMERIC_PRECISION", 

	t1.NUMERIC_SCALE AS "NUMERIC_SCALE"

FROM INFORMATION_SCHEMA.COLUMNS AS t1

	LEFT JOIN INFORMATION_SCHEMA.TABLES t6 ON
		(t6.TABLE_NAME = t1.TABLE_NAME)
		and
		(t6.TABLE_CATALOG = t1.TABLE_CATALOG)

	left join (
		select
			kcu.table_name, 
			kcu.column_name, 
			kcu.TABLE_CATALOG
		from information_schema.key_column_usage kcu
		left join information_schema.table_constraints tc on (
			(tc.constraint_catalog = kcu.constraint_catalog) 
			AND 
			(tc.constraint_schema = kcu.constraint_schema) 
			AND 
			(tc.constraint_name = kcu.constraint_name) 
		)
		where
			(tc.constraint_type = 'PRIMARY KEY')
	) pk on (
		(pk.TABLE_CATALOG = t1.TABLE_CATALOG)
		and
		(pk.table_name = t1.table_name)
		and
		(pk.column_name = t1.column_name)
	)

	left join (
		SELECT
			tcX.table_name,
			kcuX.column_name ,
			ccuX.table_name as foreigntable_name ,
			ccuX.column_name as foreigncolumn_name, 
			tcX.TABLE_CATALOG
		FROM information_schema.table_constraints tcX
		JOIN information_schema.constraint_column_usage ccuX ON
			(ccuX.constraint_name = tcX.constraint_name)
		JOIN  information_schema.key_column_usage kcuX ON
			(kcuX.constraint_name = ccuX.constraint_name)
		where
			tcX.constraint_type = 'FOREIGN KEY'
	) fk on (
		(t1.table_name = fk.table_name)
		and
		(t1.COLUMN_NAME = fk.COLUMN_NAME)
		and
		(t1.TABLE_CATALOG = fk.TABLE_CATALOG)
	)

--WHERE
	--(t1.TABLE_CATALOG = '{0}')
	--AND
--	(t1.TABLE_NAME NOT LIKE '%__base')
	--AND
	--(t1.TABLE_NAME = '{1}') 

ORDER BY 
	t1.TABLE_NAME, 
	t1.ORDINAL_POSITION
